"use strict";export function encode(n){if(typeof n[0]!="object")return console.error("must be array of objects"),n;let s=Object.keys(n[0]),r=new Array(n.length);for(let t=0;t<n.length;t++){r[t]=new Array(s.length);for(let e=0;e<s.length;e++)r[t][e]=n[t][s[e]]}return JSON.stringify([s,r])}export function restore(n){typeof n=="string"&&(n=JSON.parse(n));let[s,r]=n,t=new Array(r.length);for(let e=0;e<r.length;e++){t[e]={};for(let l=0;l<s.length;l++)t[e][s[l]]=r[e][l]}return t}class o{constructor(s){this.keys=[],this.data=[];let r=JSON.parse(s),[t,e]=r;if(t.some(i=>typeof i!="string"))throw new Error("struct must be array of strings");let l=!0;for(let i=0;i<e.length;i++)if(e[i].length!==t.length){l=!1;break}if(!l){console.error("values must have same length as struct");return}this.keys=t,this.data=e}get(s,r){if(r){const t=this.keys.indexOf(r);return t===-1?null:this.data[s][t]}else{const t={};for(let e=0;e<this.keys.length;e++)t[this.keys[e]]=this.data[s][e];return t}}set(s,r,t){const e=this.keys.indexOf(r);if(e===-1)throw new Error("key not found");this.data[s][e]=t}setAll(s,r){this.data[s]||(this.data[s]=new Array(this.keys.length));for(let t=0;t<this.keys.length;t++)this.data[s][t]=r[this.keys[t]]}}export const decode=n=>new o(n);export default{encode,decode,restore};
